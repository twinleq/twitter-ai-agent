#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
AI Twitter Agent - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ–¥–µ—Ç Twitter –∞–∫–∫–∞—É–Ω—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—ã –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
"""

import os
import sys
import time
import logging
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
from src.config import Config
from src.twitter_client import TwitterClient
from src.ai_content_generator import AIContentGenerator
from src.post_scheduler import PostScheduler
from src.message_handler import MessageHandler
from src.analytics import Analytics
from src.utils import setup_logging

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ AI Twitter Agent"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    load_dotenv()
    config = Config()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logging(config.LOG_LEVEL)
    logger = logging.getLogger(__name__)
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ AI Twitter Agent...")
    logger.info(f"üìä –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {'–ü—Ä–æ–¥–∞–∫—à–Ω' if config.PRODUCTION_MODE else '–¢–µ—Å—Ç'}")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        twitter_client = TwitterClient(config)
        ai_generator = AIContentGenerator(config)
        scheduler = PostScheduler(config, twitter_client, ai_generator)
        message_handler = MessageHandler(config, twitter_client, ai_generator)
        analytics = Analytics(config)
        
        logger.info("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Twitter API
        if twitter_client.verify_credentials():
            logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Twitter API —É—Å–ø–µ—à–Ω–æ")
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Twitter API")
            return
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ—Å—Ç–æ–≤
        if config.AUTO_POSTING_ENABLED:
            scheduler.start()
            logger.info(f"üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ—Å—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω (–ø–æ—Å—Ç –≤ {config.POSTING_SCHEDULE_HOUR}:{config.POSTING_SCHEDULE_MINUTE:02d})")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        if config.RESPONSE_ENABLED:
            message_handler.start()
            logger.info("üí¨ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã
        logger.info("üîÑ AI Twitter Agent —Ä–∞–±–æ—Ç–∞–µ—Ç...")
        while True:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                if config.RESPONSE_ENABLED:
                    message_handler.process_messages()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
                if config.ENABLE_ANALYTICS:
                    analytics.update_metrics()
                
                # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–µ–π
                time.sleep(config.CHECK_INTERVAL)
                
            except KeyboardInterrupt:
                logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                break
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                time.sleep(60)  # –ñ–¥–µ–º –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
        
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    
    finally:
        logger.info("üëã AI Twitter Agent –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    main()
